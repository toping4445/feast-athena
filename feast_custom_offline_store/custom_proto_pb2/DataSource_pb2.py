# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: feast/core/DataSource.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from feast.protos.feast.core import DataFormat_pb2 as feast_dot_core_dot_DataFormat__pb2
from feast.protos.feast.types import Value_pb2 as feast_dot_types_dot_Value__pb2
from feast.protos.feast.core import Feature_pb2 as feast_dot_core_dot_Feature__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1b\x66\x65\x61st/core/DataSource.proto\x12\nfeast.core\x1a\x1b\x66\x65\x61st/core/DataFormat.proto\x1a\x17\x66\x65\x61st/types/Value.proto\x1a\x18\x66\x65\x61st/core/Feature.proto\"\xd2\x14\n\nDataSource\x12\x0c\n\x04name\x18\x14 \x01(\t\x12\x0f\n\x07project\x18\x15 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x17 \x01(\t\x12.\n\x04tags\x18\x18 \x03(\x0b\x32 .feast.core.DataSource.TagsEntry\x12\r\n\x05owner\x18\x19 \x01(\t\x12/\n\x04type\x18\x01 \x01(\x0e\x32!.feast.core.DataSource.SourceType\x12?\n\rfield_mapping\x18\x02 \x03(\x0b\x32(.feast.core.DataSource.FieldMappingEntry\x12\x17\n\x0ftimestamp_field\x18\x03 \x01(\t\x12\x1d\n\x15\x64\x61te_partition_column\x18\x04 \x01(\t\x12 \n\x18\x63reated_timestamp_column\x18\x05 \x01(\t\x12\x1e\n\x16\x64\x61ta_source_class_type\x18\x11 \x01(\t\x12,\n\x0c\x62\x61tch_source\x18\x1a \x01(\x0b\x32\x16.feast.core.DataSource\x12:\n\x0c\x66ile_options\x18\x0b \x01(\x0b\x32\".feast.core.DataSource.FileOptionsH\x00\x12\x42\n\x10\x62igquery_options\x18\x0c \x01(\x0b\x32&.feast.core.DataSource.BigQueryOptionsH\x00\x12<\n\rkafka_options\x18\r \x01(\x0b\x32#.feast.core.DataSource.KafkaOptionsH\x00\x12@\n\x0fkinesis_options\x18\x0e \x01(\x0b\x32%.feast.core.DataSource.KinesisOptionsH\x00\x12\x42\n\x10redshift_options\x18\x0f \x01(\x0b\x32&.feast.core.DataSource.RedshiftOptionsH\x00\x12I\n\x14request_data_options\x18\x12 \x01(\x0b\x32).feast.core.DataSource.RequestDataOptionsH\x00\x12\x44\n\x0e\x63ustom_options\x18\x10 \x01(\x0b\x32*.feast.core.DataSource.CustomSourceOptionsH\x00\x12\x44\n\x11snowflake_options\x18\x13 \x01(\x0b\x32\'.feast.core.DataSource.SnowflakeOptionsH\x00\x12:\n\x0cpush_options\x18\x16 \x01(\x0b\x32\".feast.core.DataSource.PushOptionsH\x00\x12<\n\rspark_options\x18\x1b \x01(\x0b\x32#.feast.core.DataSource.SparkOptionsH\x00\x12<\n\rtrino_options\x18\x1e \x01(\x0b\x32#.feast.core.DataSource.TrinoOptionsH\x00\x12>\n\x0e\x61thena_options\x18# \x01(\x0b\x32$.feast.core.DataSource.AthenaOptionsH\x00\x1a+\n\tTagsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x33\n\x11\x46ieldMappingEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x65\n\x0b\x46ileOptions\x12+\n\x0b\x66ile_format\x18\x01 \x01(\x0b\x32\x16.feast.core.FileFormat\x12\x0b\n\x03uri\x18\x02 \x01(\t\x12\x1c\n\x14s3_endpoint_override\x18\x03 \x01(\t\x1a/\n\x0f\x42igQueryOptions\x12\r\n\x05table\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\x1a,\n\x0cTrinoOptions\x12\r\n\x05table\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\x1aj\n\x0cKafkaOptions\x12\x19\n\x11\x62ootstrap_servers\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\x30\n\x0emessage_format\x18\x03 \x01(\x0b\x32\x18.feast.core.StreamFormat\x1a\x66\n\x0eKinesisOptions\x12\x0e\n\x06region\x18\x01 \x01(\t\x12\x13\n\x0bstream_name\x18\x02 \x01(\t\x12/\n\rrecord_format\x18\x03 \x01(\x0b\x32\x18.feast.core.StreamFormat\x1aQ\n\x0fRedshiftOptions\x12\r\n\x05table\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x04 \x01(\t\x1aT\n\rAthenaOptions\x12\r\n\x05table\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x61ta_source\x18\x04 \x01(\t\x1a\x65\n\x10SnowflakeOptions\x12\r\n\x05table\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x04 \x01(\t\x12\x11\n\twarehouse\x18\x05 \x01(\t\x1aO\n\x0cSparkOptions\x12\r\n\x05table\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\x12\x13\n\x0b\x66ile_format\x18\x04 \x01(\t\x1a,\n\x13\x43ustomSourceOptions\x12\x15\n\rconfiguration\x18\x01 \x01(\x0c\x1a\xf7\x01\n\x12RequestDataOptions\x12Z\n\x11\x64\x65precated_schema\x18\x02 \x03(\x0b\x32?.feast.core.DataSource.RequestDataOptions.DeprecatedSchemaEntry\x12)\n\x06schema\x18\x03 \x03(\x0b\x32\x19.feast.core.FeatureSpecV2\x1aT\n\x15\x44\x65precatedSchemaEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12*\n\x05value\x18\x02 \x01(\x0e\x32\x1b.feast.types.ValueType.Enum:\x02\x38\x01J\x04\x08\x01\x10\x02\x1a\x13\n\x0bPushOptionsJ\x04\x08\x01\x10\x02\"\xf8\x01\n\nSourceType\x12\x0b\n\x07INVALID\x10\x00\x12\x0e\n\nBATCH_FILE\x10\x01\x12\x13\n\x0f\x42\x41TCH_SNOWFLAKE\x10\x08\x12\x12\n\x0e\x42\x41TCH_BIGQUERY\x10\x02\x12\x12\n\x0e\x42\x41TCH_REDSHIFT\x10\x05\x12\x10\n\x0cSTREAM_KAFKA\x10\x03\x12\x12\n\x0eSTREAM_KINESIS\x10\x04\x12\x11\n\rCUSTOM_SOURCE\x10\x06\x12\x12\n\x0eREQUEST_SOURCE\x10\x07\x12\x0f\n\x0bPUSH_SOURCE\x10\t\x12\x0f\n\x0b\x42\x41TCH_TRINO\x10\n\x12\x0f\n\x0b\x42\x41TCH_SPARK\x10\x0b\x12\x10\n\x0c\x42\x41TCH_ATHENA\x10\x0c\x42\t\n\x07optionsJ\x04\x08\x06\x10\x0b\x42T\n\x10\x66\x65\x61st.proto.coreB\x0f\x44\x61taSourceProtoZ/github.com/feast-dev/feast/go/protos/feast/coreb\x06proto3')



_DATASOURCE = DESCRIPTOR.message_types_by_name['DataSource']
_DATASOURCE_TAGSENTRY = _DATASOURCE.nested_types_by_name['TagsEntry']
_DATASOURCE_FIELDMAPPINGENTRY = _DATASOURCE.nested_types_by_name['FieldMappingEntry']
_DATASOURCE_FILEOPTIONS = _DATASOURCE.nested_types_by_name['FileOptions']
_DATASOURCE_BIGQUERYOPTIONS = _DATASOURCE.nested_types_by_name['BigQueryOptions']
_DATASOURCE_TRINOOPTIONS = _DATASOURCE.nested_types_by_name['TrinoOptions']
_DATASOURCE_KAFKAOPTIONS = _DATASOURCE.nested_types_by_name['KafkaOptions']
_DATASOURCE_KINESISOPTIONS = _DATASOURCE.nested_types_by_name['KinesisOptions']
_DATASOURCE_REDSHIFTOPTIONS = _DATASOURCE.nested_types_by_name['RedshiftOptions']
_DATASOURCE_ATHENAOPTIONS = _DATASOURCE.nested_types_by_name['AthenaOptions']
_DATASOURCE_SNOWFLAKEOPTIONS = _DATASOURCE.nested_types_by_name['SnowflakeOptions']
_DATASOURCE_SPARKOPTIONS = _DATASOURCE.nested_types_by_name['SparkOptions']
_DATASOURCE_CUSTOMSOURCEOPTIONS = _DATASOURCE.nested_types_by_name['CustomSourceOptions']
_DATASOURCE_REQUESTDATAOPTIONS = _DATASOURCE.nested_types_by_name['RequestDataOptions']
_DATASOURCE_REQUESTDATAOPTIONS_DEPRECATEDSCHEMAENTRY = _DATASOURCE_REQUESTDATAOPTIONS.nested_types_by_name['DeprecatedSchemaEntry']
_DATASOURCE_PUSHOPTIONS = _DATASOURCE.nested_types_by_name['PushOptions']
_DATASOURCE_SOURCETYPE = _DATASOURCE.enum_types_by_name['SourceType']
DataSource = _reflection.GeneratedProtocolMessageType('DataSource', (_message.Message,), {

  'TagsEntry' : _reflection.GeneratedProtocolMessageType('TagsEntry', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_TAGSENTRY,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.TagsEntry)
    })
  ,

  'FieldMappingEntry' : _reflection.GeneratedProtocolMessageType('FieldMappingEntry', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_FIELDMAPPINGENTRY,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.FieldMappingEntry)
    })
  ,

  'FileOptions' : _reflection.GeneratedProtocolMessageType('FileOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_FILEOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.FileOptions)
    })
  ,

  'BigQueryOptions' : _reflection.GeneratedProtocolMessageType('BigQueryOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_BIGQUERYOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.BigQueryOptions)
    })
  ,

  'TrinoOptions' : _reflection.GeneratedProtocolMessageType('TrinoOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_TRINOOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.TrinoOptions)
    })
  ,

  'KafkaOptions' : _reflection.GeneratedProtocolMessageType('KafkaOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_KAFKAOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.KafkaOptions)
    })
  ,

  'KinesisOptions' : _reflection.GeneratedProtocolMessageType('KinesisOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_KINESISOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.KinesisOptions)
    })
  ,

  'RedshiftOptions' : _reflection.GeneratedProtocolMessageType('RedshiftOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_REDSHIFTOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.RedshiftOptions)
    })
  ,

  'AthenaOptions' : _reflection.GeneratedProtocolMessageType('AthenaOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_ATHENAOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.AthenaOptions)
    })
  ,

  'SnowflakeOptions' : _reflection.GeneratedProtocolMessageType('SnowflakeOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_SNOWFLAKEOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.SnowflakeOptions)
    })
  ,

  'SparkOptions' : _reflection.GeneratedProtocolMessageType('SparkOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_SPARKOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.SparkOptions)
    })
  ,

  'CustomSourceOptions' : _reflection.GeneratedProtocolMessageType('CustomSourceOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_CUSTOMSOURCEOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.CustomSourceOptions)
    })
  ,

  'RequestDataOptions' : _reflection.GeneratedProtocolMessageType('RequestDataOptions', (_message.Message,), {

    'DeprecatedSchemaEntry' : _reflection.GeneratedProtocolMessageType('DeprecatedSchemaEntry', (_message.Message,), {
      'DESCRIPTOR' : _DATASOURCE_REQUESTDATAOPTIONS_DEPRECATEDSCHEMAENTRY,
      '__module__' : 'feast.core.DataSource_pb2'
      # @@protoc_insertion_point(class_scope:feast.core.DataSource.RequestDataOptions.DeprecatedSchemaEntry)
      })
    ,
    'DESCRIPTOR' : _DATASOURCE_REQUESTDATAOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.RequestDataOptions)
    })
  ,

  'PushOptions' : _reflection.GeneratedProtocolMessageType('PushOptions', (_message.Message,), {
    'DESCRIPTOR' : _DATASOURCE_PUSHOPTIONS,
    '__module__' : 'feast.core.DataSource_pb2'
    # @@protoc_insertion_point(class_scope:feast.core.DataSource.PushOptions)
    })
  ,
  'DESCRIPTOR' : _DATASOURCE,
  '__module__' : 'feast.core.DataSource_pb2'
  # @@protoc_insertion_point(class_scope:feast.core.DataSource)
  })
_sym_db.RegisterMessage(DataSource)
_sym_db.RegisterMessage(DataSource.TagsEntry)
_sym_db.RegisterMessage(DataSource.FieldMappingEntry)
_sym_db.RegisterMessage(DataSource.FileOptions)
_sym_db.RegisterMessage(DataSource.BigQueryOptions)
_sym_db.RegisterMessage(DataSource.TrinoOptions)
_sym_db.RegisterMessage(DataSource.KafkaOptions)
_sym_db.RegisterMessage(DataSource.KinesisOptions)
_sym_db.RegisterMessage(DataSource.RedshiftOptions)
_sym_db.RegisterMessage(DataSource.AthenaOptions)
_sym_db.RegisterMessage(DataSource.SnowflakeOptions)
_sym_db.RegisterMessage(DataSource.SparkOptions)
_sym_db.RegisterMessage(DataSource.CustomSourceOptions)
_sym_db.RegisterMessage(DataSource.RequestDataOptions)
_sym_db.RegisterMessage(DataSource.RequestDataOptions.DeprecatedSchemaEntry)
_sym_db.RegisterMessage(DataSource.PushOptions)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\020feast.proto.coreB\017DataSourceProtoZ/github.com/feast-dev/feast/go/protos/feast/core'
  _DATASOURCE_TAGSENTRY._options = None
  _DATASOURCE_TAGSENTRY._serialized_options = b'8\001'
  _DATASOURCE_FIELDMAPPINGENTRY._options = None
  _DATASOURCE_FIELDMAPPINGENTRY._serialized_options = b'8\001'
  _DATASOURCE_REQUESTDATAOPTIONS_DEPRECATEDSCHEMAENTRY._options = None
  _DATASOURCE_REQUESTDATAOPTIONS_DEPRECATEDSCHEMAENTRY._serialized_options = b'8\001'
  _DATASOURCE._serialized_start=124
  _DATASOURCE._serialized_end=2766
  _DATASOURCE_TAGSENTRY._serialized_start=1322
  _DATASOURCE_TAGSENTRY._serialized_end=1365
  _DATASOURCE_FIELDMAPPINGENTRY._serialized_start=1367
  _DATASOURCE_FIELDMAPPINGENTRY._serialized_end=1418
  _DATASOURCE_FILEOPTIONS._serialized_start=1420
  _DATASOURCE_FILEOPTIONS._serialized_end=1521
  _DATASOURCE_BIGQUERYOPTIONS._serialized_start=1523
  _DATASOURCE_BIGQUERYOPTIONS._serialized_end=1570
  _DATASOURCE_TRINOOPTIONS._serialized_start=1572
  _DATASOURCE_TRINOOPTIONS._serialized_end=1616
  _DATASOURCE_KAFKAOPTIONS._serialized_start=1618
  _DATASOURCE_KAFKAOPTIONS._serialized_end=1724
  _DATASOURCE_KINESISOPTIONS._serialized_start=1726
  _DATASOURCE_KINESISOPTIONS._serialized_end=1828
  _DATASOURCE_REDSHIFTOPTIONS._serialized_start=1830
  _DATASOURCE_REDSHIFTOPTIONS._serialized_end=1911
  _DATASOURCE_ATHENAOPTIONS._serialized_start=1913
  _DATASOURCE_ATHENAOPTIONS._serialized_end=1997
  _DATASOURCE_SNOWFLAKEOPTIONS._serialized_start=1999
  _DATASOURCE_SNOWFLAKEOPTIONS._serialized_end=2100
  _DATASOURCE_SPARKOPTIONS._serialized_start=2102
  _DATASOURCE_SPARKOPTIONS._serialized_end=2181
  _DATASOURCE_CUSTOMSOURCEOPTIONS._serialized_start=2183
  _DATASOURCE_CUSTOMSOURCEOPTIONS._serialized_end=2227
  _DATASOURCE_REQUESTDATAOPTIONS._serialized_start=2230
  _DATASOURCE_REQUESTDATAOPTIONS._serialized_end=2477
  _DATASOURCE_REQUESTDATAOPTIONS_DEPRECATEDSCHEMAENTRY._serialized_start=2387
  _DATASOURCE_REQUESTDATAOPTIONS_DEPRECATEDSCHEMAENTRY._serialized_end=2471
  _DATASOURCE_PUSHOPTIONS._serialized_start=2479
  _DATASOURCE_PUSHOPTIONS._serialized_end=2498
  _DATASOURCE_SOURCETYPE._serialized_start=2501
  _DATASOURCE_SOURCETYPE._serialized_end=2749
# @@protoc_insertion_point(module_scope)
