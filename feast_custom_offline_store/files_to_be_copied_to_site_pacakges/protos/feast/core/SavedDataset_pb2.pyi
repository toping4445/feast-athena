"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from feast.core.DataSource_pb2 import (
    DataSource as feast___core___DataSource_pb2___DataSource,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
    ScalarMap as google___protobuf___internal___containers___ScalarMap,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.timestamp_pb2 import (
    Timestamp as google___protobuf___timestamp_pb2___Timestamp,
)

from typing import (
    Iterable as typing___Iterable,
    Mapping as typing___Mapping,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class SavedDatasetSpec(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class TagsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___TagsEntry = TagsEntry

    name: typing___Text = ...
    project: typing___Text = ...
    features: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    join_keys: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    full_feature_names: builtin___bool = ...
    feature_service_name: typing___Text = ...

    @property
    def storage(self) -> type___SavedDatasetStorage: ...

    @property
    def tags(self) -> google___protobuf___internal___containers___ScalarMap[typing___Text, typing___Text]: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        project : typing___Optional[typing___Text] = None,
        features : typing___Optional[typing___Iterable[typing___Text]] = None,
        join_keys : typing___Optional[typing___Iterable[typing___Text]] = None,
        full_feature_names : typing___Optional[builtin___bool] = None,
        storage : typing___Optional[type___SavedDatasetStorage] = None,
        feature_service_name : typing___Optional[typing___Text] = None,
        tags : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"storage",b"storage"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"feature_service_name",b"feature_service_name",u"features",b"features",u"full_feature_names",b"full_feature_names",u"join_keys",b"join_keys",u"name",b"name",u"project",b"project",u"storage",b"storage",u"tags",b"tags"]) -> None: ...
type___SavedDatasetSpec = SavedDatasetSpec

class SavedDatasetStorage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def file_storage(self) -> feast___core___DataSource_pb2___DataSource.FileOptions: ...

    @property
    def bigquery_storage(self) -> feast___core___DataSource_pb2___DataSource.BigQueryOptions: ...

    @property
    def redshift_storage(self) -> feast___core___DataSource_pb2___DataSource.RedshiftOptions: ...

    @property
    def snowflake_storage(self) -> feast___core___DataSource_pb2___DataSource.SnowflakeOptions: ...

    @property
    def trino_storage(self) -> feast___core___DataSource_pb2___DataSource.TrinoOptions: ...

    @property
    def spark_storage(self) -> feast___core___DataSource_pb2___DataSource.SparkOptions: ...

    @property
    def athena_storage(self) -> feast___core___DataSource_pb2___DataSource.AthenaOptions: ...

    def __init__(self,
        *,
        file_storage : typing___Optional[feast___core___DataSource_pb2___DataSource.FileOptions] = None,
        bigquery_storage : typing___Optional[feast___core___DataSource_pb2___DataSource.BigQueryOptions] = None,
        redshift_storage : typing___Optional[feast___core___DataSource_pb2___DataSource.RedshiftOptions] = None,
        snowflake_storage : typing___Optional[feast___core___DataSource_pb2___DataSource.SnowflakeOptions] = None,
        trino_storage : typing___Optional[feast___core___DataSource_pb2___DataSource.TrinoOptions] = None,
        spark_storage : typing___Optional[feast___core___DataSource_pb2___DataSource.SparkOptions] = None,
        athena_storage : typing___Optional[feast___core___DataSource_pb2___DataSource.AthenaOptions] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"athena_storage",b"athena_storage",u"bigquery_storage",b"bigquery_storage",u"file_storage",b"file_storage",u"kind",b"kind",u"redshift_storage",b"redshift_storage",u"snowflake_storage",b"snowflake_storage",u"spark_storage",b"spark_storage",u"trino_storage",b"trino_storage"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"athena_storage",b"athena_storage",u"bigquery_storage",b"bigquery_storage",u"file_storage",b"file_storage",u"kind",b"kind",u"redshift_storage",b"redshift_storage",u"snowflake_storage",b"snowflake_storage",u"spark_storage",b"spark_storage",u"trino_storage",b"trino_storage"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"kind",b"kind"]) -> typing_extensions___Literal["file_storage","bigquery_storage","redshift_storage","snowflake_storage","trino_storage","spark_storage","athena_storage"]: ...
type___SavedDatasetStorage = SavedDatasetStorage

class SavedDatasetMeta(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def created_timestamp(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

    @property
    def last_updated_timestamp(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

    @property
    def min_event_timestamp(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

    @property
    def max_event_timestamp(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

    def __init__(self,
        *,
        created_timestamp : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
        last_updated_timestamp : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
        min_event_timestamp : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
        max_event_timestamp : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_timestamp",b"created_timestamp",u"last_updated_timestamp",b"last_updated_timestamp",u"max_event_timestamp",b"max_event_timestamp",u"min_event_timestamp",b"min_event_timestamp"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_timestamp",b"created_timestamp",u"last_updated_timestamp",b"last_updated_timestamp",u"max_event_timestamp",b"max_event_timestamp",u"min_event_timestamp",b"min_event_timestamp"]) -> None: ...
type___SavedDatasetMeta = SavedDatasetMeta

class SavedDataset(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def spec(self) -> type___SavedDatasetSpec: ...

    @property
    def meta(self) -> type___SavedDatasetMeta: ...

    def __init__(self,
        *,
        spec : typing___Optional[type___SavedDatasetSpec] = None,
        meta : typing___Optional[type___SavedDatasetMeta] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"meta",b"meta",u"spec",b"spec"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"meta",b"meta",u"spec",b"spec"]) -> None: ...
type___SavedDataset = SavedDataset
